options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: adxl345_sound_effect_3p8
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_const_source_x_0
  id: analog_const_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '25'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [108, 193]
    rotation: 0
    state: true
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: ''
    num_inputs: '2'
    ok_to_block: 'True'
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [874, 236]
    rotation: 0
    state: true
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [537, 131]
    rotation: 0
    state: true
- name: blocks_add_xx_0_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [539, 232]
    rotation: 0
    state: true
- name: blocks_vco_f_0
  id: blocks_vco_f
  parameters:
    affinity: ''
    alias: ''
    amplitude: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sensitivity: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [631, 105]
    rotation: 0
    state: true
- name: blocks_vco_f_0_0
  id: blocks_vco_f
  parameters:
    affinity: ''
    alias: ''
    amplitude: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sensitivity: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [639, 255]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport random\n\n\n#import sys\nimport zmq\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \    \"\"\"Embedded Python Block example - a simple multiply const\"\"\"\n\n\
      \    def __init__(self):  # only default arguments here\n        \"\"\"arguments\
      \ to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='0MQ_RX_adxl345',   # will show up in GRC\n\
      \            in_sig=[np.single],\n            out_sig=[np.single, np.single,\
      \ np.single]\n            \n        )\n        random.seed()\n#        print(\"\
      version: \" + sys.version)\n        port = \"5556\"\n\n        # Socket to talk\
      \ to server\n        context = zmq.Context()\n#         self.socket = context.socket(zmq.SUB)\n\
      #         self.socket.connect (\"tcp://localhost:%s\" % port)\n#          topicfilter\
      \ = \"10001\"\n#         #self.socket.setsockopt_string(zmq.SUBSCRIBE, topicfilter)\n\
      \n#    def work(self, input_items, output_items):\n    def work(self, input_items,\
      \ output_items):\n        \"\"\"Scale input with acceleration values, send to\
      \ 3 outputs\"\"\"\n        try:\n#            self.st = self.socket.recv(flags=zmq.NOBLOCK)\
      \ # If nothing published, move on\n#            print(\"got string...:\" + str(self.st))\n\
      #            topic, self.xst, self.yst, self.zst = self.st.split()\n       \
      \     self.xst = random.randint(-256, 256)\n            self.yst = random.randint(-256,\
      \ 256)\n            self.zst = random.randint(-256, 256)\n\n        except:\n\
      \            pass\n        \n        output_items[0][:] = input_items[0] * (float(self.xst)+256.0)\
      \ # add offset to keep positive\n        output_items[1][:] = input_items[0]\
      \ * (float(self.yst)+256.0)\n        output_items[2][:] = input_items[0] * (float(self.zst)+256.0)\n\
      \        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('0MQ_RX_adxl345', 'blk', [], [('0', 'float', 1)], [('0', 'float',
      1), ('1', 'float', 1), ('2', 'float', 1)], 'Embedded Python Block example -
      a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [307, 174]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [863, 93]
    rotation: 0
    state: true

connections:
- [analog_const_source_x_0, '0', epy_block_0, '0']
- [blocks_add_xx_0, '0', blocks_vco_f_0, '0']
- [blocks_add_xx_0_0, '0', blocks_vco_f_0_0, '0']
- [blocks_vco_f_0, '0', audio_sink_0, '0']
- [blocks_vco_f_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_vco_f_0_0, '0', audio_sink_0, '1']
- [blocks_vco_f_0_0, '0', qtgui_time_sink_x_0, '1']
- [epy_block_0, '0', blocks_add_xx_0, '0']
- [epy_block_0, '1', blocks_add_xx_0, '1']
- [epy_block_0, '1', blocks_add_xx_0_0, '0']
- [epy_block_0, '2', blocks_add_xx_0_0, '1']

metadata:
  file_format: 1
